name: Release

on:
  push:
    # Publish `main` as Docker `latest` image.
    branches:
    - main

    # Publish `v1.2.3` tags as releases.
    tags:
    - v*

env:
  PODMAN_IMAGE: podman
  PODMAN_MINIMAL_IMAGE: podman-minimal
  PODMAN_REMOTE_IMAGE: podman-remote

jobs:
  push:
    #runs-on: ubuntu-latest
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
#    if: github.event_name == 'push'
      
    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Set up qemu
      uses: docker/setup-qemu-action@v1
      with:
        platforms: all

    - name: Build & test
      run: make images
      #run: make images test

    - name: Build signed archives
      run: make clean multiarch-tar TAR_TARGET=signed-tar
      env:
        GPG_SIGN_KEY: ${{ secrets.GPG_SIGN_KEY }}
        GPG_SIGN_KEY_PASSPHRASE: ${{ secrets.GPG_SIGN_KEY_PASSPHRASE }}

    - name: Upload a Build Artifact archive amd64
      uses: actions/upload-artifact@v2.1.1
      with:
        path: ./build/asset/podman-linux-amd64.tar.gz
        name: podman-linux-amd64.tar.gz

    - name: Upload a Build Artifact signature amd64
      uses: actions/upload-artifact@v2.1.1
      with:
        path: ./build/asset/podman-linux-amd64.tar.gz.asc
        name: podman-linux-amd64.tar.gz.asc

    - name: Upload a Build Artifact archive aarch64
      uses: actions/upload-artifact@v2.1.1
      with:
        path: ./build/asset/podman-linux-arm64.tar.gz
        name: podman-linux-arm64.tar.gz

    - name: Upload a Build Artifact signature aarch64
      uses: actions/upload-artifact@v2.1.1
      with:
        path: ./build/asset/podman-linux-arm64.tar.gz.asc
        name: podman-linux-arm64.tar.gz.asc
